name: CICD Pipeline
on: 
  workflow_dispatch:  # Trigger only manually from Github Actions (With Inputs)
    inputs:
      awsRegion:
        description: 'AWS Region to deploy to (ex. us-east-2)'
        required: false
        default: us-west-2
        type: choice
        options:
          - us-east-1
          - us-east-2
          - us-west-1
          - us-west-2
      environment:
        description: 'Which GitHub environment to use for deploy'
        required: true
        type: choice
        options:
          - Production-Charles
          - Production-Alex
  
# Set permissions for runner 
permissions: 
  contents: read  #(required for pulling code down)
  id-token: write #(required for OIDC)

jobs: 
  build: 
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}

    steps:

    # Load source code from repo into runner VM
    - name: Checkout Source Code
      uses: actions/checkout@v2 

    #######################
    #   Github OIDC Auth  #
    ###############################################################                       
    # Github used as a federated identity provider                #
    # Github actions grabs short lived JWT for AWS Authentication #
    ###############################################################
    - name: Configure AWS OIDC Role
      uses: aws-actions/configure-aws-credentials@v1
      with:  
        role-to-assume: ${{ secrets.OIDC_ROLE}}
        aws-region: ${{ github.event.inputs.awsRegion }}
    
    #########################
    #   Application Build   #
    ####################################################
    # Build any application code (EC2 & Lambda) that   #
    # needs to be deployed with the infrastructure     #
    ####################################################
    - name: Install Dependencies
      working-directory: infra
      shell: bash
      run: yarn install --immutable --immutable-cache --check-cache

    ###############
    #  CDK Synth  #
    #############################################################
    # Creates a cloudformation template via the Typescript CDK  #
    # and allows utilization of context.                        #
    #     NOTE: Github Actions provides AWS CLI by default      #
    #     NOTE: Synth comes before Deploy in the cdk lifecycle  #
    #############################################################
    - name: Synthesize Infrastructure w/Context (AWS CDK)
      working-directory: infra
      shell: bash
      run: cdk synth --context botToken=${{ secrets.BOT_TOKEN }}

    ###############
    #  CDK Deploy #
    #############################################################
    # Deploys the CloudFormation template from the previous     #
    # to AWS in order to generate the Stacks.                   #
    #############################################################
    # - name: Deploy Infrastructure (AWS CDK)
    #   working-directory: infra
    #   run: cdk deploy --all --require-approval never 